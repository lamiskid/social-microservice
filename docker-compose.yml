version: '3.8'
services:

  api-gateway:
    image: api-gateway
    ports:
      - "8181:8084"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spring

  discovery-service:
    image: discovery-service
    ports:
      - "8761:8761"
    build:
      context: ./discovery-service
      dockerfile: ./Dockerfile
    container_name: discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8761/eureka/
    networks:
      - spring

  inventory-service:
    image: inventory-service
    ports:
      - "8083:8083"
    build:
      context: ./inventory-service
      dockerfile: ./Dockerfile
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-inventory
    networks:
      - spring

  order-service:
    image: order-service
    ports:
      - "8082:8082"
    build:
      context: ./order-service
      dockerfile: ./Dockerfile
    container_name: order-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-order
    networks:
      - spring

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-services
      dockerfile: ./Dockerfile
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  postgres-inventory:
    image: postgres
    ports:
      - "5434:5432" #5432 is the default port for postgres - recommended to use 5432
    environment:
      #      - POSTGRES_USER=admin
      #      - POSTGRES_PASSWORD=password
      #      - POSTGRES_DB=order-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory-service
    volumes:
      - ./data/postgres/inventory-service:/data/postgres
      - ./init/postgres/inventory-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: postgres-inventory-comp3095
    restart: unless-stopped
    networks:
      - spring

  postgres-order:
    image: postgres
    ports:
      - "5431:5432" #5432 is the default port for postgres - recommended to use 5432
    environment:
      #      - POSTGRES_USER=admin
      #      - POSTGRES_PASSWORD=password
      #      - POSTGRES_DB=order-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order-service
    volumes:
      - ./data/postgres/order-service:/data/postgres
      - ./init/postgres/order-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: postgres-order-comp3095
    restart: unless-stopped
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      #      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      #      - MONGO_INITDB_ROOT_PASSWORD=M4hy4r_1
      MONGO_INITDB_ROOT_USERNAME: rootadmin
      MONGO_INITDB_ROOT_PASSWORD: M4hy4r_1
    volumes:
      - ./data/mongo/product-service:/data/db #mongo always save data in /data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb #must math the name used in application-docker.properties.
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      #      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      #      - PGADMIN_DEFAULT_PASSWORD=password
      PGADMIN_DEFAULT_EMAIL: user@domain.ca
      PGADMIN_DEFAULT_PASSWORD: password
    container_name: pgadmin-microservice-comp3095
    restart: unless-stopped
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8008:8008"
    environment:
      #      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootadmin
      #      - ME_CONFIG_MONGODB_ADMINPASSWORD=M4hy4r_1
      #      - ME_CONFIG_MONGODB_SERVER=mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: rootadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: M4hy4r_1
      ME_CONFIG_MONGODB_SERVER: mongodb
    container_name: mongo-express-db
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring

networks:
  spring:
    driver: bridge